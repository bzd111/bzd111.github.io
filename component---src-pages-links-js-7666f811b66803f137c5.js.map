{"version":3,"file":"component---src-pages-links-js-7666f811b66803f137c5.js","mappings":"4LAwCA,MArCe,IAEP,uBAAKA,UAAU,8CACX,uBAAKA,UAAU,0BACX,uBAAKA,UAAU,uBACX,uBAAKA,UAAU,kBACX,gBAAC,KAAI,CACDC,GAAG,IACHD,UAAU,iEACb,MAGD,gBAAC,KAAI,CACDC,GAAG,QACHD,UAAU,iEACb,MAGD,gBAAC,KAAI,CACDC,GAAG,SACHD,UAAU,iEACb,MAGD,gBAAC,KAAI,CACDC,GAAG,SACHD,UAAU,iEACb,UCWzB,MA5Be,IAAmB,IAAlB,SAAEE,GAAU,GACbC,EAAAA,EAAAA,IAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,MACP,uBACEH,UAAU,cACVI,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,wBAAMP,UAAU,SAASE,IAE1B,C,+CCOP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEM,EAAW,MAAEC,EAAK,SAAEP,GAAU,EAC3C,MAAM,KAAEQ,IAASP,EAAAA,EAAAA,IAAe,YAc1BQ,EAAkBH,GAAeE,EAAKE,aAAaJ,YACnDK,EAAgC,QAApB,EAAGH,EAAKE,oBAAY,aAAjB,EAAmBH,MAExC,OACE,gCACE,6BAAQI,EAAkBJ,EAAK,MAAMI,EAAiBJ,GACtD,wBAAMK,KAAK,cAAcC,QAASJ,IAClC,wBAAMK,SAAS,WAAWD,QAASN,IACnC,wBAAMO,SAAS,iBAAiBD,QAASJ,IACzC,wBAAMK,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAL,EAAKE,oBAAY,aAAjB,EAAmBK,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASN,IACpC,wBAAMK,KAAK,sBAAsBC,QAASJ,IACzCT,EAGP,C,kGCtCA,MAAMgB,EAAc,CAChB,CACIJ,KAAM,gBACNN,YAAa,OACbW,KAAM,0BACNC,OAAQ,uCAEZ,CACIN,KAAM,QACNN,YAAa,OACbW,KAAM,6BACNC,OAAQ,0CAEZ,CACIN,KAAM,YACNN,YAAa,OACbW,KAAM,6BACNC,OAAQ,uDAEZ,CACIN,KAAM,wBACNN,YAAa,OACbW,KAAM,2BACNC,OAAQ,oDAGZ,CACIN,KAAM,kBACNN,YAAa,OACbW,KAAM,8BACNC,OAAQ,2CA6CHC,EAAO,IAAM,gBAAC,IAAG,CAACZ,MAAM,OAErC,UA3CkB,IAEV,gBAAC,IAAM,KACH,gBAAC,IAAG,CAACA,MAAM,OACX,uBAAKT,UAAU,+BACX,sBAAIA,UAAU,uCAAsC,MACpD,uBAAKA,UAAU,wDACVkB,EAAYI,KAAI,CAACC,EAAQC,IACtB,qBACIC,IAAKD,EACLE,KAAMH,EAAOJ,KACbQ,OAAO,SACPC,IAAI,sBACJ5B,UAAU,iHAEV,uBAAKA,UAAU,+BACX,uBACI6B,IAAKN,EAAOH,OACZU,IAAQP,EAAOT,KAAI,UACnBd,UAAU,sCACV+B,QAAUC,IACNA,EAAEL,OAAOE,IAAM,uXAAuX,IAG9Y,2BACI,sBAAI7B,UAAU,uCACTuB,EAAOT,MAEZ,qBAAGd,UAAU,sBACRuB,EAAOf,oB","sources":["webpack://gatsby-starter-default/./src/components/Navbar.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/links.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\n\nconst Navbar = () => {\n    return (\n        <nav className=\"bg-white shadow-lg fixed w-full top-0 z-50\">\n            <div className=\"max-w-6xl mx-auto px-4\">\n                <div className=\"flex justify-center\">\n                    <div className=\"flex space-x-7\">\n                        <Link\n                            to=\"/\"\n                            className=\"flex items-center py-4 px-2 text-gray-700 hover:text-gray-900\"\n                        >\n                            首页\n                        </Link>\n                        <Link\n                            to=\"/tags\"\n                            className=\"flex items-center py-4 px-2 text-gray-700 hover:text-gray-900\"\n                        >\n                            标签\n                        </Link>\n                        <Link\n                            to=\"/about\"\n                            className=\"flex items-center py-4 px-2 text-gray-700 hover:text-gray-900\"\n                        >\n                            关于\n                        </Link>\n                        <Link\n                            to=\"/links\"\n                            className=\"flex items-center py-4 px-2 text-gray-700 hover:text-gray-900\"\n                        >\n                            友链\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nexport default Navbar\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Navbar from \"./Navbar\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Navbar />\n      <div\n        className=\"text-center\"\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main className=\"pt-20\">{children}</main>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\n\nconst friendLinks = [\n    {\n        name: \"Laisky's Blog\",\n        description: \"技术博客\",\n        link: \"https://blog.laisky.com\",\n        avatar: \"https://blog.laisky.com/favicon.ico\"\n    },\n    {\n        name: \"卡瓦邦噶！\",\n        description: \"技术博客\",\n        link: \"https://www.kawabangga.com\",\n        avatar: \"https://www.kawabangga.com/favicon.ico\"\n    },\n    {\n        name: \"Manjusaka\",\n        description: \"技术博客\",\n        link: \"https://www.manjusaka.blog\",\n        avatar: \"https://avatars.githubusercontent.com/u/7054676?v=4\"\n    },\n    {\n        name: \"Armin Ronacher's Blog\",\n        description: \"技术博客\",\n        link: \"https://lucumr.pocoo.org\",\n        avatar: \"https://lucumr.pocoo.org/static/avatar-large.jpg\"\n\n    },\n    {\n        name: \"Asphaltt's Blog\",\n        description: \"技术博客\",\n        link: \"https://asphaltt.github.io/\",\n        avatar: \"https://asphaltt.github.io/favicon.ico\"\n    }\n];\n\nconst LinksPage = () => {\n    return (\n        <Layout>\n            <Seo title=\"友链\" />\n            <div className=\"max-w-6xl mx-auto px-4 py-8\">\n                <h1 className=\"text-4xl font-bold mb-8 text-center\">友链</h1>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n                    {friendLinks.map((friend, index) => (\n                        <a\n                            key={index}\n                            href={friend.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                            className=\"block p-6 bg-white rounded-lg shadow-md hover:shadow-lg transition-shadow duration-300 border border-gray-200\"\n                        >\n                            <div className=\"flex items-center space-x-4\">\n                                <img\n                                    src={friend.avatar}\n                                    alt={`${friend.name} avatar`}\n                                    className=\"w-12 h-12 rounded-full object-cover\"\n                                    onError={(e) => {\n                                        e.target.src = \"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='48' height='48' viewBox='0 0 24 24'%3E%3Cpath fill='%23ccc' d='M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z'/%3E%3C/svg%3E\";\n                                    }}\n                                />\n                                <div>\n                                    <h2 className=\"text-xl font-semibold text-gray-800\">\n                                        {friend.name}\n                                    </h2>\n                                    <p className=\"text-gray-600 mt-1\">\n                                        {friend.description}\n                                    </p>\n                                </div>\n                            </div>\n                        </a>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport const Head = () => <Seo title=\"友链\" />;\n\nexport default LinksPage;\n"],"names":["className","to","children","useStaticQuery","style","margin","maxWidth","padding","description","title","site","metaDescription","siteMetadata","defaultTitle","name","content","property","author","friendLinks","link","avatar","Head","map","friend","index","key","href","target","rel","src","alt","onError","e"],"sourceRoot":""}