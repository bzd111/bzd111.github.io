{"componentChunkName":"component---src-templates-blog-post-js","path":"/2021-02-23-static-files-to-go-file.markdown/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h1>\n<p>在使用 pingcap 的 dm 数据同步工具时，发现没起前端服务，怎么看到的配置页面。原来是把静态文件压缩放到一个 go 的 string 变量里了。\n然后起了一个 <code class=\"language-text\">http.FileServer</code>。接下来实践一下。</p>\n<h1 id=\"实践\" style=\"position:relative;\"><a href=\"#%E5%AE%9E%E8%B7%B5\" aria-label=\"实践 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>实践</h1>\n<p>代码结构比较简单，有个 frontend 文件夹。</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">├── frontend\n│   ├── dist\n│   │   ├── assets\n│   │   ├── favicon.ico\n│   │   └── index.html\n│   ├── index.html\n│   ├── package-lock.json\n│   ├── package.json\n│   ├── public\n│   │   └── favicon.ico\n│   ├── src\n│   │   ├── App.vue\n│   │   ├── assets\n│   │   ├── components\n│   │   └── main.js\n│   └── vite.config.js\n├── go.mod\n├── go.sum\n├── main.go\n└── statik\n    └── statik.go</code></pre></div>\n<h2 id=\"后端代码\" style=\"position:relative;\"><a href=\"#%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81\" aria-label=\"后端代码 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>后端代码</h2>\n<p>初始化项目，<code class=\"language-text\">go mod init static-embed</code>，创建<code class=\"language-text\">main.go</code>，内容如下</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">//go:generate statik -src=./frontend/dist -dest=./</span>\n<span class=\"token keyword\">package</span> main\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"net/http\"</span>\n\t<span class=\"token string\">\"os\"</span>\n\n\t<span class=\"token boolean\">_</span> <span class=\"token string\">\"static-embed/statik\"</span> <span class=\"token comment\">// statik生成的文件会在statik下, 调用init方法</span>\n\n\t<span class=\"token string\">\"github.com/rakyll/statik/fs\"</span>\n\t<span class=\"token string\">\"go.uber.org/zap\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tstatikFS<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">New</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tzap<span class=\"token punctuation\">.</span><span class=\"token function\">L</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> zap<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\thttp<span class=\"token punctuation\">.</span><span class=\"token function\">Handle</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">StripPrefix</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/\"</span><span class=\"token punctuation\">,</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">FileServer</span><span class=\"token punctuation\">(</span>statikFS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\terr <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\":%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8080</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tzap<span class=\"token punctuation\">.</span><span class=\"token function\">L</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> zap<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\tos<span class=\"token punctuation\">.</span><span class=\"token function\">Exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"前端代码\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81\" aria-label=\"前端代码 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前端代码</h2>\n<p>前端使用 vue3，在根目录下使用命令<code class=\"language-text\">npm init @vitejs/app frontend</code>创建项目，\n直接打包<code class=\"language-text\">npm run build</code>，静态文件会生成在 dist 文件下，</p>\n<h2 id=\"生成-statik-文件\" style=\"position:relative;\"><a href=\"#%E7%94%9F%E6%88%90-statik-%E6%96%87%E4%BB%B6\" aria-label=\"生成 statik 文件 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>生成 statik 文件</h2>\n<p>使用命令<code class=\"language-text\">go generate</code>，会调用<code class=\"language-text\">statik -src=./frontend/dist -dest=./</code>，生成 statik.go</p>\n<h2 id=\"运行\" style=\"position:relative;\"><a href=\"#%E8%BF%90%E8%A1%8C\" aria-label=\"运行 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>运行</h2>\n<p>运行<code class=\"language-text\">go run main.go</code>，打开浏览器<code class=\"language-text\">localhost:8080</code>就能看到如下的图片了\n<img src=\"assets/statik-vue.png\" alt=\"\"></p>\n<h2 id=\"原理\" style=\"position:relative;\"><a href=\"#%E5%8E%9F%E7%90%86\" aria-label=\"原理 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>原理</h2>\n<ol>\n<li>运行<code class=\"language-text\">go generate</code>命令时，运行的是<code class=\"language-text\">statik -src=./frontend/dist -dest=./</code>，会根据 src 的目录规则去读取文件内容，然后进行 zip 压缩，赋值给 data 变量，</li>\n<li>在 <code class=\"language-text\">main.go</code> 引入，调用 <code class=\"language-text\">init()</code>方法，把 data 通过 <code class=\"language-text\">fs.Register</code> 注册到 map 上，</li>\n<li>通过 <code class=\"language-text\">fs.New()</code> 返回一个实现了<code class=\"language-text\">Open(name string) (File, error)</code>的 <code class=\"language-text\">Statik</code> 的结构体，供<code class=\"language-text\">http.FileServer</code>使用</li>\n</ol>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"https://github.com/rakyll/statik\">https://github.com/rakyll/statik</a></li>\n<li><a href=\"https://github.com/pingcap/dm/tree/master/dm/portal\">https://github.com/pingcap/dm/tree/master/dm/portal</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n</li>\n<li>\n<p><a href=\"#%E5%AE%9E%E8%B7%B5\">实践</a></p>\n<ul>\n<li><a href=\"#%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81\">后端代码</a></li>\n<li><a href=\"#%E5%89%8D%E7%AB%AF%E4%BB%A3%E7%A0%81\">前端代码</a></li>\n<li><a href=\"#%E7%94%9F%E6%88%90-statik-%E6%96%87%E4%BB%B6\">生成 statik 文件</a></li>\n<li><a href=\"#%E8%BF%90%E8%A1%8C\">运行</a></li>\n<li><a href=\"#%E5%8E%9F%E7%90%86\">原理</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#reference\">Reference</a></p>\n</li>\n</ul>","frontmatter":{"title":"static files to go file","date":"2021-02-23T00:00:00.000Z"}}},"pageContext":{"slug":"/2021-02-23-static-files-to-go-file.markdown"}},"staticQueryHashes":["3649515864"],"slicesMap":{}}