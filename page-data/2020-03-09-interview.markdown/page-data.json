{"componentChunkName":"component---src-templates-blog-post-js","path":"/2020-03-09-interview.markdown/","result":{"data":{"markdownRemark":{"html":"<!-- vim-markdown-toc Redcarpet -->\n<ul>\n<li><a href=\"#%E5%89%8D%E8%A8%80\">前言</a>\n<ul>\n<li><a href=\"#1%E3%80%81%E5%86%99%E5%87%BA-r-39-123-n-39-3-%E7%9A%84%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\">1、写出 r’123\\n’*3 的运行结果</a></li>\n<li><a href=\"#2%E3%80%81%E7%94%A8-for-in-%E6%89%A7%E8%A1%8C-1-%E4%BA%BF%E6%AC%A1-%E8%87%AA%E5%A2%9E%E6%93%8D%E4%BD%9C\">2、用 for in 执行 1 亿次 自增操作</a></li>\n<li><a href=\"#3%E3%80%81%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B\">3、函数式编程</a></li>\n<li><a href=\"#4%E3%80%81%E7%AE%80%E8%BF%B0-classmothed-%E5%92%8C-staticmethod-%E7%9A%84%E5%8C%BA%E5%88%AB\">4、简述 classmothed 和 staticmethod 的区别</a></li>\n<li><a href=\"#5%E3%80%81%E8%AF%B7%E7%AE%80%E8%BF%B0%E4%B8%80%E4%B8%8B%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BD%9C%E7%94%A8-options%EF%BC%8Cargs-getopt-getopt-sys-argv-1-quot-hu-p-i-quot-quot-url-quot-quot-path-quot-quot-port-quot\">5、请简述一下代码的作用<code class=\"language-text\">options，args = getopt.getopt(sys.argv[1:],\"hu:p:i:\",\"url=\",\"path=\",\"port=\"])</code></a></li>\n<li><a href=\"#6%E3%80%81%E5%B7%B2%E7%9F%A5-a-%E7%B1%BB%EF%BC%8Cb-%E7%B1%BB%EF%BC%8Cc-%E7%B1%BB%EF%BC%88%E7%BB%A7%E6%89%BF%E8%87%AA-a-%E7%B1%BB%EF%BC%89%EF%BC%8Cd-%E7%B1%BB%EF%BC%88%E7%BB%A7%E6%89%BF%E8%87%AA-b-%E7%B1%BB%EF%BC%89%EF%BC%8Ce-%E7%B1%BB%EF%BC%88%E7%BB%A7%E6%89%BF%E8%87%AA-c%EF%BC%8Cd%EF%BC%89%EF%BC%8C%E5%A6%82%E6%9E%9C-a-d-%E7%B1%BB%E9%83%BD%E6%9C%89%E4%B8%AA%E5%8A%9E%E6%B3%95-demo-%EF%BC%8C%E8%AF%B7%E9%97%AE%E8%B0%83%E7%94%A8-e-%E7%B1%BB%E7%9A%84-demo-%E7%9A%84%E6%96%B9%E6%B3%95%E6%97%B6%EF%BC%8C%E5%B0%86%E4%BC%9A%E8%B0%83%E7%94%A8%E5%93%AA%E4%B8%AA%E5%9F%BA%E7%B1%BB%E7%9A%84-demo-%E6%96%B9%E6%B3%95%EF%BC%9F%E5%B9%B6%E8%AF%B4%E6%98%8E%E5%8E%9F%E5%9B%A0\">6、已知 A 类，B 类，C 类（继承自 A 类），D 类（继承自 B 类），E 类（继承自 C，D），如果 A,D 类都有个办法 demo()，请问调用 E 类的 demo 的方法时，将会调用哪个基类的 demo()方法？并说明原因</a></li>\n<li><a href=\"#7%E3%80%81%E8%AF%B7%E7%AE%80%E5%8D%95%E8%AF%B4%E6%98%8E-search-%E5%92%8C-match-%E7%9A%84%E5%8C%BA%E5%88%AB\">7、请简单说明 search()和 match()的区别</a></li>\n<li><a href=\"#%EF%BC%98%E3%80%81%E5%A6%82%E4%BD%95%E6%8B%B7%E8%B4%9D%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%EF%BC%9F%E5%B9%B6%E7%AE%80%E5%8D%95%E8%AF%B4%E4%B8%80%E4%B8%8B%E8%B5%8B%E5%80%BC%EF%BC%8C%E6%B5%85%E6%8B%B7%E8%B4%9D%E3%80%81%E6%B7%B1%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%8C%BA%E5%88%AB\">８、如何拷贝一个对象？并简单说一下赋值，浅拷贝、深拷贝的区别</a></li>\n<li><a href=\"#%EF%BC%99%E3%80%81%E8%AF%B7%E5%86%99%E5%87%BA%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8-temp-%E9%87%8C%E9%9D%A2%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0\">９、请写出一段代码实现删除一个列表 temp 里面的重复元素</a></li>\n<li><a href=\"#10%E3%80%81%E7%94%A8-python-%E5%8C%B9%E9%85%8D-html-tag-%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E5%92%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F\">10、用 Python 匹配 HTML.tag 的时候，&#x3C;.<em>>和&#x3C;.</em>?>有什么区别？</a></li>\n<li><a href=\"#11%E3%80%81%E8%AF%B7%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%8B%E7%BB%8D-python-%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%EF%BC%8C%E5%AE%83%E6%98%AF%E5%90%A6%E8%83%BD%E5%A4%84%E7%90%86%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%9F%E5%B9%B6%E8%AF%B4%E6%98%8E%E5%8E%9F%E5%9B%A0\">11、请简单的介绍 python 的垃圾回收机制，它是否能处理循环引用的问题？并说明原因</a></li>\n<li><a href=\"#12%E3%80%81%E4%BD%A0%E6%9C%89-8-%E4%B8%AA%E4%B8%80%E6%A0%B7%E5%A4%A7%E5%B0%8F%E7%9A%84%E7%90%83%EF%BC%8C%E5%85%B6%E4%B8%AD-7-%E4%B8%AA%E7%9A%84%E8%B4%A8%E9%87%8F%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%EF%BC%8C%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E9%87%8D%EF%BC%8C%E6%80%8E%E6%A0%B7%E7%94%A8%E4%B8%A4%E6%AC%A1%E5%B0%86%E9%82%A3%E4%B8%AA%E9%87%8D%E4%B8%80%E4%BA%9B%E7%9A%84%E7%90%83%E6%89%BE%E5%87%BA%E6%9D%A5\">12、你有 8 个一样大小的球，其中 7 个的质量是一样的，另一个比较重，怎样用两次将那个重一些的球找出来</a></li>\n<li><a href=\"#13%E3%80%81%E4%BD%BF%E7%94%A8%E4%BF%AE%E9%A5%B0%E5%99%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%8D%95%E4%BE%8B\">13、使用修饰器实现一个单例</a></li>\n<li><a href=\"#14%E3%80%81%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%AD%97%E5%85%B8%E7%B1%BB%EF%BC%8C%E8%A6%81%E6%B1%82%E5%85%83%E7%B4%A0%E5%8F%AA%E8%83%BD%E8%A2%AB%E8%AE%BE%E7%BD%AE-1-%E6%AC%A1\">14、实现一个字典类，要求元素只能被设置 1 次</a></li>\n<li><a href=\"#15%E3%80%81mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C\">15、MySQL 数据库操作</a></li>\n</ul>\n</li>\n</ul>\n<!-- vim-markdown-toc -->\n<h2 id=\"前言\" style=\"position:relative;\"><a href=\"#%E5%89%8D%E8%A8%80\" aria-label=\"前言 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>前言</h2>\n<p>多年前面试的题目</p>\n<h3 id=\"1写出-r123n3-的运行结果\" style=\"position:relative;\"><a href=\"#1%E5%86%99%E5%87%BA-r123n3-%E7%9A%84%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\" aria-label=\"1写出 r123n3 的运行结果 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1、写出 r’123\\n’*3 的运行结果</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">123\\n123\\n123\\n</code></pre></div>\n<p>拓展：print ‘123\\n’*3</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">123\n123\n123</code></pre></div>\n<h3 id=\"2用-for-in-执行-1-亿次-自增操作\" style=\"position:relative;\"><a href=\"#2%E7%94%A8-for-in-%E6%89%A7%E8%A1%8C-1-%E4%BA%BF%E6%AC%A1-%E8%87%AA%E5%A2%9E%E6%93%8D%E4%BD%9C\" aria-label=\"2用 for in 执行 1 亿次 自增操作 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2、用 for in 执行 1 亿次 自增操作</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">for i in xrange(100000000)\nfor i in range(100000000)\n补充：xrange 用法与 range 完全相同，所不同的是生成的不是一个list对象，而是一个生成器。\n</code></pre></div>\n<h3 id=\"3函数式编程\" style=\"position:relative;\"><a href=\"#3%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B\" aria-label=\"3函数式编程 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3、函数式编程</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">reduce(lambda x,i : x+i ,[ i for i in temp if i>0 and temp.index(i)%2==0  ])\n补充:\n\nmap()\n将序列中的元素通过处理函数处理后返回一个新的列表\n\nfilter()\n将序列中的元素通过函数过滤后返回一个新的列表\n\nreduce()\n将序列中的元素通过一个二元函数处理返回一个结果</code></pre></div>\n<h3 id=\"4简述-classmothed-和-staticmethod-的区别\" style=\"position:relative;\"><a href=\"#4%E7%AE%80%E8%BF%B0-classmothed-%E5%92%8C-staticmethod-%E7%9A%84%E5%8C%BA%E5%88%AB\" aria-label=\"4简述 classmothed 和 staticmethod 的区别 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4、简述 classmothed 和 staticmethod 的区别</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">对于classmethod的参数，需要隐式地传递类名，而staticmethod参数中则不需要传递类名，其实这就是二者最大的区别。\n\n二者都可以通过类名或者类实例对象来调用，因为强调的是classmethod和staticmethod，所以在写代码的时候最好使用类名。\n\n对于staticmethod就是为了要在类中定义而设置的，一般来说很少这样使用，可以使用模块级(module-level)的函数来替代它。既然要把它定义在类中，想必有作者的考虑。\n\n对于classmethod，可以通过子类来进行重定义。\n</code></pre></div>\n<h3 id=\"5请简述一下代码的作用optionsargs--getoptgetoptsysargv1hupiurlpathport\" style=\"position:relative;\"><a href=\"#5%E8%AF%B7%E7%AE%80%E8%BF%B0%E4%B8%80%E4%B8%8B%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BD%9C%E7%94%A8optionsargs--getoptgetoptsysargv1hupiurlpathport\" aria-label=\"5请简述一下代码的作用optionsargs  getoptgetoptsysargv1hupiurlpathport permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5、请简述一下代码的作用<code class=\"language-text\">options，args = getopt.getopt(sys.argv[1:],\"hu:p:i:\",\"url=\",\"path=\",\"port=\"])</code></h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">首先getopt是用来处理命令行参数的，\n默认参数 getopt(args, shortopts, longopts = [])\nshortopts: 是短格式 (-)\nlongtopts: 是长格式 (--)\n短格式中带: 表示后面要参数\n长格式中带= 表示后面要参数\noptions，args都是列表，只是options列表中有元组，而args只是单纯的列表\noptions会将匹配到的参数，用类似key-value的形式保存在元组中，而没有配到的数据会保存到args中，</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">python getopt_init.py  --url=www.baidu.com -u www.baidu.com -p 88 -i 127.0.0.1 --port=88 55 66\n\n#options结果\n[('--url', 'www.baidu.com'), ('-u', 'www.baidu.com'), ('-p', '88'), ('-i', '127.0.0.1'), ('--port', '88')]\n#args的结果\n['55', '66']</code></pre></div>\n<h3 id=\"6已知-a-类b-类c-类继承自-a-类d-类继承自-b-类e-类继承自-cd如果-ad-类都有个办法-demo请问调用-e-类的-demo-的方法时将会调用哪个基类的-demo方法并说明原因\" style=\"position:relative;\"><a href=\"#6%E5%B7%B2%E7%9F%A5-a-%E7%B1%BBb-%E7%B1%BBc-%E7%B1%BB%E7%BB%A7%E6%89%BF%E8%87%AA-a-%E7%B1%BBd-%E7%B1%BB%E7%BB%A7%E6%89%BF%E8%87%AA-b-%E7%B1%BBe-%E7%B1%BB%E7%BB%A7%E6%89%BF%E8%87%AA-cd%E5%A6%82%E6%9E%9C-ad-%E7%B1%BB%E9%83%BD%E6%9C%89%E4%B8%AA%E5%8A%9E%E6%B3%95-demo%E8%AF%B7%E9%97%AE%E8%B0%83%E7%94%A8-e-%E7%B1%BB%E7%9A%84-demo-%E7%9A%84%E6%96%B9%E6%B3%95%E6%97%B6%E5%B0%86%E4%BC%9A%E8%B0%83%E7%94%A8%E5%93%AA%E4%B8%AA%E5%9F%BA%E7%B1%BB%E7%9A%84-demo%E6%96%B9%E6%B3%95%E5%B9%B6%E8%AF%B4%E6%98%8E%E5%8E%9F%E5%9B%A0\" aria-label=\"6已知 a 类b 类c 类继承自 a 类d 类继承自 b 类e 类继承自 cd如果 ad 类都有个办法 demo请问调用 e 类的 demo 的方法时将会调用哪个基类的 demo方法并说明原因 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6、已知 A 类，B 类，C 类（继承自 A 类），D 类（继承自 B 类），E 类（继承自 C，D），如果 A,D 类都有个办法 demo()，请问调用 E 类的 demo 的方法时，将会调用哪个基类的 demo()方法？并说明原因</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#conding:utf-8\n#!/usr/bin python\nclass A:\n    def __init__(self,data_A= \"A_data\"):\n        self.data = data_A\n\n    def demo(self):\n        print \"A.demo()\"\n\n\nclass B:\n    def __init__(self,data_B=\"B_data\"):\n        self.data =data_B\n\n\n\nclass C(A):\n    def __init__(self,data_C=\"C_data\"):\n        #A.__init__(self,data_A=\"A_data\")\n        self.data = data_C\n\n\n\nclass D(B):\n    def __init__(self,data_D=\"D_data\",data_B=\"B_data\"):\n\n        self.data = data_D\n\n    def demo(self):\n        print \"D.demo()\"\nclass E(C,D):\n    def __init__(self,data_E=\"E_data\"):\n        self.data = data_E\n\n\nE = E()\nprint E.demo()</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">运行结果:\nA.demo()</code></pre></div>\n<h3 id=\"7请简单说明-search和-match的区别\" style=\"position:relative;\"><a href=\"#7%E8%AF%B7%E7%AE%80%E5%8D%95%E8%AF%B4%E6%98%8E-search%E5%92%8C-match%E7%9A%84%E5%8C%BA%E5%88%AB\" aria-label=\"7请简单说明 search和 match的区别 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>7、请简单说明 search()和 match()的区别</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">match()函数只检测是不是在string的开始位置匹配，\nsearch()会扫描整个string查找匹配；\nmatch()只有在0位置匹配成功的话才有返回，如果不是开始位置匹配成功的话，match()就返回none\nsearch()会扫描整个字符串并返回第一个成功的匹配</code></pre></div>\n<h3 id=\"８如何拷贝一个对象并简单说一下赋值浅拷贝深拷贝的区别\" style=\"position:relative;\"><a href=\"#%EF%BC%98%E5%A6%82%E4%BD%95%E6%8B%B7%E8%B4%9D%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E7%AE%80%E5%8D%95%E8%AF%B4%E4%B8%80%E4%B8%8B%E8%B5%8B%E5%80%BC%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%B7%B1%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%8C%BA%E5%88%AB\" aria-label=\"８如何拷贝一个对象并简单说一下赋值浅拷贝深拷贝的区别 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>８、如何拷贝一个对象？并简单说一下赋值，浅拷贝、深拷贝的区别</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 赋值是将一个对象的地址赋值给一个变量，让变量指向该地址\n\n2. 浅拷贝是在另一块地址中创建一个新的变量或容器，但是容器内的元素的地址均是源对象的元素的地址的拷贝。也就是说新的容器中指向了旧的元素\n\n3. 深拷贝是在另一块地址中创建一个新的变量或容器，同时容器内的元素的地址也是新开辟的，仅仅是值相同而已，是完全的副本。\n</code></pre></div>\n<h3 id=\"９请写出一段代码实现删除一个列表-temp-里面的重复元素\" style=\"position:relative;\"><a href=\"#%EF%BC%99%E8%AF%B7%E5%86%99%E5%87%BA%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8-temp-%E9%87%8C%E9%9D%A2%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0\" aria-label=\"９请写出一段代码实现删除一个列表 temp 里面的重复元素 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>９、请写出一段代码实现删除一个列表 temp 里面的重复元素</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">list(set(temp))</code></pre></div>\n<h3 id=\"10用-python-匹配-htmltag-的时候和有什么区别\" style=\"position:relative;\"><a href=\"#10%E7%94%A8-python-%E5%8C%B9%E9%85%8D-htmltag-%E7%9A%84%E6%97%B6%E5%80%99%E5%92%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB\" aria-label=\"10用 python 匹配 htmltag 的时候和有什么区别 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10、用 Python 匹配 HTML.tag 的时候，&#x3C;.<em>>和&#x3C;.</em>?>有什么区别？</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">第一种写法是，尽可能多的匹配，就是匹配到的字符串尽量长，第二种写法是尽可能少的匹配，就是匹配到的字符串尽量短。</code></pre></div>\n<h3 id=\"11请简单的介绍-python-的垃圾回收机制它是否能处理循环引用的问题并说明原因\" style=\"position:relative;\"><a href=\"#11%E8%AF%B7%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%8B%E7%BB%8D-python-%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E5%AE%83%E6%98%AF%E5%90%A6%E8%83%BD%E5%A4%84%E7%90%86%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98%E5%B9%B6%E8%AF%B4%E6%98%8E%E5%8E%9F%E5%9B%A0\" aria-label=\"11请简单的介绍 python 的垃圾回收机制它是否能处理循环引用的问题并说明原因 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11、请简单的介绍 python 的垃圾回收机制，它是否能处理循环引用的问题？并说明原因</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">在Python中，每个对象都保存了一个称为引用计数的整数值，来追踪到底有多少引用指向了这个对象。无论何时，如果程序中的一个变量或其他对象引用了目标对象，Python将会增加这个计数值，而当程序停止使用这个对象，则Python会减少这个计数值。一旦计数值被减到零，Python将会释放这个对象以及回收相关内存空间。\n\nlist1与list2相互引用，如果不存在其他对象对它们的引用，list1与list2的引用计数也仍然为1，所占用的内存永远无法被回收，这将是致命的。</code></pre></div>\n<h3 id=\"12你有-8-个一样大小的球其中-7-个的质量是一样的另一个比较重怎样用两次将那个重一些的球找出来\" style=\"position:relative;\"><a href=\"#12%E4%BD%A0%E6%9C%89-8-%E4%B8%AA%E4%B8%80%E6%A0%B7%E5%A4%A7%E5%B0%8F%E7%9A%84%E7%90%83%E5%85%B6%E4%B8%AD-7-%E4%B8%AA%E7%9A%84%E8%B4%A8%E9%87%8F%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E9%87%8D%E6%80%8E%E6%A0%B7%E7%94%A8%E4%B8%A4%E6%AC%A1%E5%B0%86%E9%82%A3%E4%B8%AA%E9%87%8D%E4%B8%80%E4%BA%9B%E7%9A%84%E7%90%83%E6%89%BE%E5%87%BA%E6%9D%A5\" aria-label=\"12你有 8 个一样大小的球其中 7 个的质量是一样的另一个比较重怎样用两次将那个重一些的球找出来 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12、你有 8 个一样大小的球，其中 7 个的质量是一样的，另一个比较重，怎样用两次将那个重一些的球找出来</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1、分别拿3个球放在天平的两边,如果天平平衡,则再称剩余的两个球；\n2、如果天平不平衡,则把重的一边的3个球中任选2个球放在天平两边\n3、若天平平衡,则剩余的那个球是比较重的那个,若不平衡,则天平下沉的一端是那个重一些的球</code></pre></div>\n<h3 id=\"13使用修饰器实现一个单例\" style=\"position:relative;\"><a href=\"#13%E4%BD%BF%E7%94%A8%E4%BF%AE%E9%A5%B0%E5%99%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%8D%95%E4%BE%8B\" aria-label=\"13使用修饰器实现一个单例 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>13、使用修饰器实现一个单例</h3>\n<p>单例模式：系统中一个类只有一个实例而且该实例易于外界访问</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def singleton(cls, *args, **kw):\n    instances = {}\n    def _singleton():\n        if cls not in instances:\n            instances[cls] = cls(*args, **kw)\n        return instances[cls]\n    return _singleton\n\n@singleton\nclass MyClass(object):\n    a = 1\n    def __init__(self, x=0):\n        self.x = x\n\none = MyClass()\ntwo = MyClass()\none.x = 2\ntwo.a = 5\nprint one.x\n#2\nprint two.x\n#2\nprint one.a\n#5\nprint one.a\n#5\n</code></pre></div>\n<h3 id=\"14实现一个字典类要求元素只能被设置-1-次\" style=\"position:relative;\"><a href=\"#14%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%AD%97%E5%85%B8%E7%B1%BB%E8%A6%81%E6%B1%82%E5%85%83%E7%B4%A0%E5%8F%AA%E8%83%BD%E8%A2%AB%E8%AE%BE%E7%BD%AE-1-%E6%AC%A1\" aria-label=\"14实现一个字典类要求元素只能被设置 1 次 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>14、实现一个字典类，要求元素只能被设置 1 次</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">class ODict(dict):\n    def __setitem__(self,key,value):\n        if self.__contains__(key):\n            raise ValueError(\"The Value Exists\")\n        else:\n            super(ODict, self).__setitem__(key, value)\n\nd = ODict()\nd[\"hello\"] = \"world\"\nd[\"hello\"] = \"1111\"</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">会出现错误提示\nValueError: The Value Exists</code></pre></div>\n<h3 id=\"15mysql-数据库操作\" style=\"position:relative;\"><a href=\"#15mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C\" aria-label=\"15mysql 数据库操作 permalink\" class=\"toc-anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>15、MySQL 数据库操作</h3>\n<p>表 demo1 如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">name</th>\n<th align=\"center\">subject</th>\n<th align=\"center\">score</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">张三</td>\n<td align=\"center\">数学</td>\n<td align=\"center\">97</td>\n</tr>\n<tr>\n<td align=\"center\">张五</td>\n<td align=\"center\">数学</td>\n<td align=\"center\">63</td>\n</tr>\n<tr>\n<td align=\"center\">杨七</td>\n<td align=\"center\">科学</td>\n<td align=\"center\">84</td>\n</tr>\n<tr>\n<td align=\"center\">杨三</td>\n<td align=\"center\">科学</td>\n<td align=\"center\">88</td>\n</tr>\n<tr>\n<td align=\"center\">王五</td>\n<td align=\"center\">语文</td>\n<td align=\"center\">54</td>\n</tr>\n<tr>\n<td align=\"center\">王六</td>\n<td align=\"center\">语文</td>\n<td align=\"center\">72</td>\n</tr>\n<tr>\n<td align=\"center\">赵七</td>\n<td align=\"center\">英语</td>\n<td align=\"center\">91</td>\n</tr>\n<tr>\n<td align=\"center\">赵六</td>\n<td align=\"center\">英语</td>\n<td align=\"center\">78</td>\n</tr>\n</tbody>\n</table>\n<p>表 demo2 如下：</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">name</th>\n<th align=\"center\">level</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">张三</td>\n<td align=\"center\">1</td>\n</tr>\n<tr>\n<td align=\"center\">张五</td>\n<td align=\"center\">5</td>\n</tr>\n<tr>\n<td align=\"center\">杨七</td>\n<td align=\"center\">4</td>\n</tr>\n<tr>\n<td align=\"center\">杨三</td>\n<td align=\"center\">8</td>\n</tr>\n<tr>\n<td align=\"center\">王五</td>\n<td align=\"center\">2</td>\n</tr>\n<tr>\n<td align=\"center\">王六</td>\n<td align=\"center\">6</td>\n</tr>\n<tr>\n<td align=\"center\">赵七</td>\n<td align=\"center\">7</td>\n</tr>\n<tr>\n<td align=\"center\">赵六</td>\n<td align=\"center\">3</td>\n</tr>\n</tbody>\n</table>\n<p>1.请将上面的表格用 json 表达。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    \"张三\": {\n        \"数学\": 97\n    },\n    \"张五\": {\n        \"数学\": 63\n    },\n    \"杨七\": {\n        \"科学\": 84\n    },\n    \"杨三\": {\n        \"科学\": 88\n    },\n    \"王五\": {\n        \"语文\": 54\n    },\n    \"王六\": {\n        \"语文\": 72\n    },\n    \"赵七\": {\n        \"数学\": 91\n    },\n    \"赵六\": {\n        \"数学\": 78\n    }\n}</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    \"张三\": 1,\n    \"张五\": 5,\n    \"杨七\": 4,\n    \"杨三\": 8,\n    \"王五\": 2,\n    \"王六\": 6,\n    \"赵七\": 7,\n    \"赵六\": 3\n}</code></pre></div>\n<p>2.请用一句话 SQL 统计 60，70，80，90 分各档次的人数，并输出人数大于 2 的记录，val1 为分数，val2 为人数。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">select *\nfrom (\nselect case\nwhen (score >=60 and score &lt;70) then \"60-70\"\nwhen (score >=70 and score &lt;80) then \"70-80\"\nwhen (score >=80 and score &lt;90) then \"80-90\"\nwhen (score >=90 ) then \"90-100\"\nelse '100'\nend \"val1\",\ncount(*) 'val2' from demo1\ngroup by\ncase\nwhen (score >=60 and score &lt;70) then \"60-70\"\nwhen (score >=70 and score &lt;80) then \"70-80\"\nwhen (score >=80 and score &lt;90) then \"80-90\"\nwhen (score >=90 ) then \"90-100\"\nend\norder by 1\n) as bbb\nwhere bbb.val2>=2</code></pre></div>\n<p>3.请用 SQL 输出 demo1 左连接 demo2，并且 level 大于 5 的记录。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">select distinct\ndemo2.name,level from demo1 left join demo2 on (demo2.level>5);</code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#%E5%89%8D%E8%A8%80\">前言</a></p>\n<ul>\n<li><a href=\"#1%E5%86%99%E5%87%BA-r123n3-%E7%9A%84%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\">1、写出 r’123\\n’*3 的运行结果</a></li>\n<li><a href=\"#2%E7%94%A8-for-in-%E6%89%A7%E8%A1%8C-1-%E4%BA%BF%E6%AC%A1-%E8%87%AA%E5%A2%9E%E6%93%8D%E4%BD%9C\">2、用 for in 执行 1 亿次 自增操作</a></li>\n<li><a href=\"#3%E5%87%BD%E6%95%B0%E5%BC%8F%E7%BC%96%E7%A8%8B\">3、函数式编程</a></li>\n<li><a href=\"#4%E7%AE%80%E8%BF%B0-classmothed-%E5%92%8C-staticmethod-%E7%9A%84%E5%8C%BA%E5%88%AB\">4、简述 classmothed 和 staticmethod 的区别</a></li>\n<li><a href=\"#5%E8%AF%B7%E7%AE%80%E8%BF%B0%E4%B8%80%E4%B8%8B%E4%BB%A3%E7%A0%81%E7%9A%84%E4%BD%9C%E7%94%A8optionsargs--getoptgetoptsysargv1hupiurlpathport\">5、请简述一下代码的作用<code class=\"language-text\">options，args = getopt.getopt(sys.argv[1:],\"hu:p:i:\",\"url=\",\"path=\",\"port=\"])</code></a></li>\n<li><a href=\"#6%E5%B7%B2%E7%9F%A5-a-%E7%B1%BBb-%E7%B1%BBc-%E7%B1%BB%E7%BB%A7%E6%89%BF%E8%87%AA-a-%E7%B1%BBd-%E7%B1%BB%E7%BB%A7%E6%89%BF%E8%87%AA-b-%E7%B1%BBe-%E7%B1%BB%E7%BB%A7%E6%89%BF%E8%87%AA-cd%E5%A6%82%E6%9E%9C-ad-%E7%B1%BB%E9%83%BD%E6%9C%89%E4%B8%AA%E5%8A%9E%E6%B3%95-demo%E8%AF%B7%E9%97%AE%E8%B0%83%E7%94%A8-e-%E7%B1%BB%E7%9A%84-demo-%E7%9A%84%E6%96%B9%E6%B3%95%E6%97%B6%E5%B0%86%E4%BC%9A%E8%B0%83%E7%94%A8%E5%93%AA%E4%B8%AA%E5%9F%BA%E7%B1%BB%E7%9A%84-demo%E6%96%B9%E6%B3%95%E5%B9%B6%E8%AF%B4%E6%98%8E%E5%8E%9F%E5%9B%A0\">6、已知 A 类，B 类，C 类（继承自 A 类），D 类（继承自 B 类），E 类（继承自 C，D），如果 A,D 类都有个办法 demo()，请问调用 E 类的 demo 的方法时，将会调用哪个基类的 demo()方法？并说明原因</a></li>\n<li><a href=\"#7%E8%AF%B7%E7%AE%80%E5%8D%95%E8%AF%B4%E6%98%8E-search%E5%92%8C-match%E7%9A%84%E5%8C%BA%E5%88%AB\">7、请简单说明 search()和 match()的区别</a></li>\n<li><a href=\"#%EF%BC%98%E5%A6%82%E4%BD%95%E6%8B%B7%E8%B4%9D%E4%B8%80%E4%B8%AA%E5%AF%B9%E8%B1%A1%E5%B9%B6%E7%AE%80%E5%8D%95%E8%AF%B4%E4%B8%80%E4%B8%8B%E8%B5%8B%E5%80%BC%E6%B5%85%E6%8B%B7%E8%B4%9D%E6%B7%B1%E6%8B%B7%E8%B4%9D%E7%9A%84%E5%8C%BA%E5%88%AB\">８、如何拷贝一个对象？并简单说一下赋值，浅拷贝、深拷贝的区别</a></li>\n<li><a href=\"#%EF%BC%99%E8%AF%B7%E5%86%99%E5%87%BA%E4%B8%80%E6%AE%B5%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0%E5%88%A0%E9%99%A4%E4%B8%80%E4%B8%AA%E5%88%97%E8%A1%A8-temp-%E9%87%8C%E9%9D%A2%E7%9A%84%E9%87%8D%E5%A4%8D%E5%85%83%E7%B4%A0\">９、请写出一段代码实现删除一个列表 temp 里面的重复元素</a></li>\n<li><a href=\"#10%E7%94%A8-python-%E5%8C%B9%E9%85%8D-htmltag-%E7%9A%84%E6%97%B6%E5%80%99%E5%92%8C%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB\">10、用 Python 匹配 HTML.tag 的时候，&#x3C;.<em>>和&#x3C;.</em>?>有什么区别？</a></li>\n<li><a href=\"#11%E8%AF%B7%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%8B%E7%BB%8D-python-%E7%9A%84%E5%9E%83%E5%9C%BE%E5%9B%9E%E6%94%B6%E6%9C%BA%E5%88%B6%E5%AE%83%E6%98%AF%E5%90%A6%E8%83%BD%E5%A4%84%E7%90%86%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98%E5%B9%B6%E8%AF%B4%E6%98%8E%E5%8E%9F%E5%9B%A0\">11、请简单的介绍 python 的垃圾回收机制，它是否能处理循环引用的问题？并说明原因</a></li>\n<li><a href=\"#12%E4%BD%A0%E6%9C%89-8-%E4%B8%AA%E4%B8%80%E6%A0%B7%E5%A4%A7%E5%B0%8F%E7%9A%84%E7%90%83%E5%85%B6%E4%B8%AD-7-%E4%B8%AA%E7%9A%84%E8%B4%A8%E9%87%8F%E6%98%AF%E4%B8%80%E6%A0%B7%E7%9A%84%E5%8F%A6%E4%B8%80%E4%B8%AA%E6%AF%94%E8%BE%83%E9%87%8D%E6%80%8E%E6%A0%B7%E7%94%A8%E4%B8%A4%E6%AC%A1%E5%B0%86%E9%82%A3%E4%B8%AA%E9%87%8D%E4%B8%80%E4%BA%9B%E7%9A%84%E7%90%83%E6%89%BE%E5%87%BA%E6%9D%A5\">12、你有 8 个一样大小的球，其中 7 个的质量是一样的，另一个比较重，怎样用两次将那个重一些的球找出来</a></li>\n<li><a href=\"#13%E4%BD%BF%E7%94%A8%E4%BF%AE%E9%A5%B0%E5%99%A8%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%8D%95%E4%BE%8B\">13、使用修饰器实现一个单例</a></li>\n<li><a href=\"#14%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E5%AD%97%E5%85%B8%E7%B1%BB%E8%A6%81%E6%B1%82%E5%85%83%E7%B4%A0%E5%8F%AA%E8%83%BD%E8%A2%AB%E8%AE%BE%E7%BD%AE-1-%E6%AC%A1\">14、实现一个字典类，要求元素只能被设置 1 次</a></li>\n<li><a href=\"#15mysql-%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C\">15、MySQL 数据库操作</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"多年前面试的题目","date":"2020-03-09"}}},"pageContext":{"slug":"/2020-03-09-interview.markdown"}},"staticQueryHashes":["3649515864"],"slicesMap":{}}